@model detailsAndRelatedProduct
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
@Html.AntiForgeryToken()
<div class="product-details-container">
    <div class="product-details-wrapper">
        <div class="product-gallery">
            <div class="main-image">
                <img src="@Model.product.MainImage" alt="@Model.product.Name">
            </div>
            <div class="thumbnail-container">
                <div class="thumbnail active">
                    <img src="@Model.product.MainImage" alt="@Model.product.Name">
                </div>
                @foreach (var i in Model.product.Images)
                {
                    <div class="thumbnail">
                        <img src="@i.image" alt="Product image">
                    </div>
                }
            </div>
        </div>

        <div class="product-info">
            <h1 style="font-size:30px">@Model.product.Name</h1>
            <div class="product-meta">
                <span  class="product-category">@Model.product.subCategory.category.Name</span>
                <span class="product-sku">Last Update: @Model.product.LastUpdate.ToString("dd-MM-yyyy")</span>
            </div>
            <div class="product-price">
                <span class="current-price">$@Model.product.Price.ToString("F2")</span>
                
            </div>
            <div class="product-rating">
                <div class="stars">
                    @{
                        var avg = Model.AverageRating;
                        var fullStars = (int)avg;
                        var hasHalfStar = (avg - fullStars) >= 0.5;
                    }
                    @for (int i = 0; i < fullStars; i++)
                    {
                        <i class="fas fa-star"></i>
                    }
                    @if (hasHalfStar)
                    {
                        <i class="fas fa-star-half-alt"></i>
                    }
                    @for (int i = 0; i < (5 - fullStars - (hasHalfStar ? 1 : 0)); i++)
                    {
                        <i class="far fa-star"></i>
                    }
                    <span>@Model.AverageRating.ToString("0.0") (@Model.RatingCount reviews)</span>
                </div>
            </div>
            <div class="product-description mt-3">
                <h4 style="font-size:30px;">Description</h4>
                <p>@Model.product.Description</p>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="rating-section">
                    <h5>Rate this product</h5>
                    <div class="rating">
                        <input type="radio" id="star5" name="rate" value="5" /><label for="star5" title="Excellent"></label>
                        <input type="radio" id="star4" name="rate" value="4" /><label for="star4" title="very good"></label>
                        <input type="radio" id="star3" name="rate" value="3" /><label for="star3" title="good"></label>
                        <input type="radio" id="star2" name="rate" value="2" /><label for="star2" title="acceptable"></label>
                        <input type="radio" id="star1" name="rate" value="1" /><label for="star1" title="bad"></label>
                    </div>
                    <button id="submitRatingBtn" class="btn btn-primary mt-2" style="clear:both; display:block;">Submit evaluation</button>
                    <div id="ratingResponse" class="mt-2" style="clear: both;"></div>
                </div>
            }

            <div class="comments-section-wrapper mt-4">
                <h4 style="margin-bottom:20px;font-size:30px;">Comments (@Model.Comments.Count())</h4>

                @if (User.Identity.IsAuthenticated)
                {
                    <div class="add-comment-box my-3">
                        <textarea id="comment-text-area" class="form-control comment-input" rows="1" placeholder="Write your comment..."></textarea>
                        <button id="submit-comment-btn" class="btn comment-submit-btn">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                    <div id="comment-response" class="mt-2"></div>
                }
                else if (!Model.Comments.Any())
                {
                    <div class="alert alert-light mt-3">
                        You must <a asp-controller="Account" asp-action="Login">Log in</a> To add a comment.
                    </div>
                }

                <div id="comments-list" class="mt-3">
                    @if (Model.Comments.Any())
                    {
                        int commentCounter = 0;
                        foreach (var comment in Model.Comments)
                        {
                            var commentClass = commentCounter >= 2 ? "comment-hidden" : "";
                            <div class="comment-item @commentClass">
                                <div class="comment-avatar-container">
                                    @if (!string.IsNullOrEmpty(comment.User.iamge))
                                    {
                                        <img src="@comment.User.iamge" alt="@comment.User.UserName" class="comment-avatar" />
                                    }
                                    else
                                    {
                                        <i class="fas fa-user-circle comment-avatar-icon"></i>
                                    }
                                </div>
                                <div class="comment-content">
                                    <div class="comment-author">
                                        <strong>@comment.User.UserName</strong>
                                        <span class="comment-date text-muted">@comment.CreateAt.ToString("g")</span>
                                    </div>
                                    <div class="comment-body">
                                        <p>@comment.Comments</p>
                                    </div>
                                </div>
                            </div>
                            commentCounter++;
                        }

                        if (Model.Comments.Count() > 2)
                        {
                            <button id="show-more-comments" class="btn btn-outline-secondary mt-3 w-100">Show More</button>
                        }
                    }
                    else
                    {
                        <p id="no-comments-msg">There are no comments yet.</p>
                    }
                </div>
            </div>

            <div class="product-actions mt-4">
            
                <button class="add-to-cart" id="add-to-cart-btn">
                    <i class="fas fa-shopping-cart"></i> Add to Cart
                </button>
            </div>
        </div>
    </div>
</div>
@if (Model.ListOfProdect != null && Model.ListOfProdect.Any())
    {
           <div class="products-section">
                   
               <h2>Related Products</h2>
               <div class="products-grid">
            @foreach (var i in Model.ListOfProdect)
                   {
                       <a asp-action="Details" asp-controller="product" asp-route-id="@i.Id" class="product-card-link">
                       <div class="product-card">
                           <img src="@i.MainImage" alt="iPhone 13 Pro Max">
                           <h3>@i.Name</h3>
                           <p>@i.Description</p>
                           <div class="product-price">$@i.Price</div>
                       </div>
                       </a>
                   }
                     
               </div>
           </div>
        }
@section Scripts {
    <script>
        $(document).ready(function () {

            $('#submitRatingBtn').on('click', function () {
                var ratingValue = $('input[name="rate"]:checked').val();
                if (!ratingValue) { $('#ratingResponse').text('Please select a rating first.').css('color', 'red'); return; }
                $.ajax({
                    url: '@Url.Action("AddRating", "RateProduct")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ ProductId: @Model.product.Id, RatingValue: parseInt(ratingValue) }),
                    success: function (response) {
                        $('#ratingResponse').text(response.message).css('color', 'green');
                        $('.rating input').prop('disabled', true);
                        $('#submitRatingBtn').prop('disabled', true);
                        if (response.newAverageRating !== undefined) {
                            var starContainer = $('.product-rating .stars');
                            starContainer.empty();
                            var avg = parseFloat(response.newAverageRating);
                            var fullStars = Math.floor(avg);
                            var hasHalfStar = (avg - fullStars) >= 0.5;
                            var emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                            for (var i = 0; i < fullStars; i++) { starContainer.append('<i class="fas fa-star"></i>'); }
                            if (hasHalfStar) { starContainer.append('<i class="fas fa-star-half-alt"></i>'); }
                            for (var i = 0; i < emptyStars; i++) { starContainer.append('<i class="far fa-star"></i>'); }
                            starContainer.append(` <span>${avg.toFixed(1)} (${response.reviewCount} reviews)</span>`);
                        }
                    }
                });
            });

            $('#submit-comment-btn').on('click', function() {
                var commentText = $('#comment-text-area').val();
                if (!commentText.trim()) { return; }
                $.ajax({
                    url: '@Url.Action("AddComment", "Comment")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ ProductId: @Model.product.Id, CommentText: commentText }),
                    success: function(response) {
                        $('#comment-text-area').val('').css('height', 'auto');
                        $('#no-comments-msg').remove();
                        var avatarHtml = response.profilePictureUrl
                            ? `<img src="${response.profilePictureUrl}" alt="${response.userName}" class="comment-avatar" />`
                            : `<i class="fas fa-user-circle comment-avatar-icon"></i>`;
                        var newCommentHtml = `
                            <div class="comment-item is-new">
                                <div class="comment-avatar-container">${avatarHtml}</div>
                                <div class="comment-content">
                                    <div class="comment-author">
                                        <strong>${response.userName}</strong>
                                        <span class="comment-date text-muted">${response.createAt}</span>
                                    </div>
                                    <div class="comment-body"><p>${response.commentText}</p></div>
                                </div>
                            </div>`;
                        $('#comments-list').prepend(newCommentHtml);
                        setTimeout(function() {
                            $('#comments-list .comment-item.is-new').removeClass('is-new');
                        }, 50);
                    }
                });
            });

            $('#show-more-comments').on('click', function() {
                var hiddenComments = $('.comment-item.comment-hidden');
                hiddenComments.slice(0, 2).removeClass('comment-hidden');
                if (hiddenComments.length <= 2) {
                    $(this).fadeOut('slow');
                }
            });

            $('.thumbnail').on('click', function () {
                $('.thumbnail.active').removeClass('active');
                $(this).addClass('active');
                var newImageSrc = $(this).find('img').attr('src');
                $('.main-image img').attr('src', newImageSrc);
            });

            $('#comment-text-area').on('input', function () {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });
        });
    </script>
    <script>
        $('#add-to-cart-btn').on('click', function(e) {
            e.preventDefault();
            var productId = @Model.product.Id;
            var quantity = parseInt($('.quantity-selector .quantity').text()) || 1;
            var dataToSend = {
                ProductId: productId,
                Quantity: quantity
            };

            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(dataToSend),

                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },

                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: response.message,
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false
                        });
                        $('#cart-item-count').text(response.cartCount);
                    }
                },
                error: function(xhr) {
                    var errorMsg = 'An error occurred. Please try again.';
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMsg = xhr.responseJSON.message;
                    }
                    Swal.fire({
                        title: 'Error!',
                        text: errorMsg,
                        icon: 'error'
                    });
                }
            });
        });
    </script>
}
<style>
    .rating {
        border: none;
        float: left;
    }

        .rating > input {
            opacity: 0;
            position: absolute;
        }

        .rating > label {
            color: #ddd;
            float: right;
            font-size: 2em;
            cursor: pointer;
        }

    button#submitRatingBtn {
        background-color: #2675fc;
        border: none;
        padding: 9px 20px;
        color: white;
        border-radius: 6px;
        font-size: 14px;
    }

    button#show-more-comments {
        background-color: #2675fc;
        border: none;
        padding: 7px 30px;
        color: white;
        border-radius: 6px;
        font-size: 14px;
    }

            .rating > label:before {
                content: '★';
            }

        .rating > input:checked ~ label, .rating:not(:checked) > label:hover, .rating:not(:checked) > label:hover ~ label {
            color: #FFD700;
        }

    .add-comment-box {
        position: relative;
        display: flex;
        align-items: center;
    }

    .comment-input {
        flex-grow: 1;
        border-radius: 20px;
        padding: 8px 50px 8px 15px;
        resize: none;
        overflow-y: hidden;
        min-height: 40px;
        line-height: 1.5;
        transition: all 0.2s ease;
    }

    .comment-submit-btn {
        position: absolute;
        right: 5px;
        top: 50%;
        transform: translateY(-50%);
        background: transparent;
        border: none;
        color: #007bff;
        font-size: 1.2rem;
        cursor: pointer;
        padding: 5px 10px;
    }

        .comment-submit-btn:hover {
            color: #0056b3;
        }

    .comments-section-wrapper {
        background-color: #f9f9f9;
        padding: 1.5rem;
        border-radius: 8px;
        margin-top: 2rem;
    }

    .comment-item {
        display: flex;
        align-items: flex-start;
        gap: 15px;
        padding: 1rem 0;
        border-top: 1px solid #e9e9e9;
        opacity: 1;
        transform: translateY(0);
        transition: opacity 0.4s ease-out, transform 0.4s ease-out;
    }

    .comment-hidden {
        display: none;
    }

    .comment-item.is-new {
        opacity: 0;
        transform: translateY(-10px);
    }

    .comment-item:first-child {
        border-top: none;
        padding-top: 0;
        margin-top: 18px;
    }

    .comment-avatar-container {
        flex-shrink: 0;
    }

    .comment-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        object-fit: cover;
    }

    .comment-avatar-icon {
        font-size: 45px;
        color: #BDBDBD;
        width: 45px;
        height: 45px;
    }

    .comment-content {
        flex-grow: 1;
        min-width: 0;
    }

    .comment-author {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }

    .comment-body p {
        margin: 0.25rem 0 0 0;
        color: #333;
        word-wrap: break-word;
    }

    .comment-date {
        font-size: 0.8em;
        color: #888;
        white-space: nowrap;
        margin-left: 10px;
    }
</style>